#summary A summary of the OWASP Broken Web Applications project
#labels Featured

= Virtual Machine Format =

The Open Web Application Security Project (OWASP) Broken Web Applications Project is distributed as a Virtual Machine in [http://www.vmware.com VMware] format compatible with their no-cost [http://www.vmware.com/products/player/ VMware Player] and [http://www.vmware.com/products/server/ VMware Server] products (along with their commercial products).

= Applications included =

This project includes applications from various sources (listed in no particular order).

Intentionally Vulnerable Applications:
  * [http://www.owasp.org/index.php/Category:OWASP_WebGoat_Project OWASP WebGoat] version 5.3-SNAPSHOT (Java)
  * [http://www.owasp.org/index.php/Category:OWASP_Vicnum_Project OWASP Vicnum] version 1.3 (Perl)
  * [http://www.irongeek.com/i.php?page=security/mutillidae-deliberately-vulnerable-php-owasp-top-10 Mutillidae version 1.3] (PHP)
  * [http://www.dvwa.co.uk/ Damn Vulnerable Web Application] version 1.06 (PHP)
  * [http://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project OWASP CSRFGuard] Test Application version 2.2 (Java)
  * [http://www.mandiant.com/ Mandiant] Struts Forms (Java/Struts)
  * Simple ASP.NET Forms (ASP.NET/C#)
  * Simple Form with DOM Cross Site Scripting (HTML/!JavaScript)

Old Versions of Real Applications:
  * [http://wordpress.org/ WordPress] 2.0.0 (PHP, released December 31, 2005, downloaded from [http://www.oldapps.com/Wordpress.php www.oldapps.com])
  * [http://www.phpbb.com/ phpBB] 2.0.0 (PHP, released April 4, 2002, downloaded from [http://www.oldapps.com/phpbb.php www.oldapps.com]) 
  * [http://www.forumsoftware.ca/ Yazd] version 1.0 (Java, released February 20, 2002)

= Download = 

See the [Download download page] for information about where to get the VM.

= User Accounts =

The various vulnerable web applications have some user accounts created and some content included.  See [ApplicationAccounts] for details.

= Management =

Once booted, the VM can be administered few a few different mechanisms. Note, I don't consider these components "in scope" for the vulnerabilities in the VM... they are just there to support management.  Administrative interfaces:
  * SSH
  * Samba shares
  * Console login
  * PHPMyAdmin (at `http://owaspbwa/phpmyadmin`)
  * Tomcat Manager (at `http://owaspbwa:8080/manager/html`)

*In all cases, use a username of "root" and a password of "owaspbwa".*

= Vulnerabilities =

I don't have a catalog of all the vulnerabilities contained in the VM.  My plan is to track those here on Google Code as "Issues" with the label "Known-Vulnerability" and with a status of SubmittedKV and VerifiedKV. 

Please review the [http://code.google.com/p/owaspbwa/issues/list Issues Page] to see what people have already reported and feel free to submit some additional items for everyone's benefit.

I have also been experimenting with documenting the issues in a Google Docs Spreadsheet.  You can view what I have so far at http://spreadsheets.google.com/ccc?key=0AjS7iIavl273dFkzME1WSE5faHg0Ykhya1c3SmdrVmc&hl=en.

= Known Bugs = 

All known bugs (not the intentional security issues) in the VM are listed at [KnownBugsIn09].  

*Most importantly, the VM may not get an IP address from DHCP on boot up.*  If this happens, log in as root (the password is owaspbwa) and run dhclient. That should give the machine an IP address.